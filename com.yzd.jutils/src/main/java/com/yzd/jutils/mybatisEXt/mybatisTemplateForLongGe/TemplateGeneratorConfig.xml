<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

	<!-- 引入配置文件  -->
	<properties resource="generator.properties" />

	<!-- 指定数据连接驱动jar地址  -->
	<classPathEntry location="${classPath}" />

	<context id="cabinet" targetRuntime="MyBatis3">
	
		<!-- 自定义插件给实体类增加了字段注释  -->
		<plugin type="com.kjj.mybatis.generator.plugins.FieldCommentPlugin"/>
		<!-- 该插件给实体类增加了equals和hashCode方法  -->
		<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
		<!-- 该插件给实体类添加toString()方法  -->
		<plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
		<!-- 自定义插件给mapper文件Insert添加主键，删除InsertSelective  -->
		<plugin type="com.kjj.mybatis.generator.plugins.InsertPlugin"/>
		<!-- 自定义插件给mapper文件添加其他方法  -->
		<plugin type="com.kjj.mybatis.generator.plugins.SelectPlugin"/>
		<!-- 自定义插件给添加service类  -->
		<plugin type="com.kjj.mybatis.generator.plugins.ServicePlugin"/>
		<!-- 自定义插件给添加dao类  -->
		<plugin type="com.kjj.mybatis.generator.plugins.DaoPlugin"/>
		<!-- 自定义插件给添加aide类  -->
		<plugin type="com.kjj.mybatis.generator.plugins.AidePlugin"/>
		
		<commentGenerator>
			<!-- 是否去除自动生成的注释 true：是 ： false:否  -->
			<property name="suppressAllComments" value="true" />
			<!-- 是否生成注释代时间戳  -->
			<property name="suppressDate" value="true" />
		</commentGenerator>

		<!-- jdbc连接  -->
		<jdbcConnection driverClass="${jdbc_driver}"
			connectionURL="${jdbc_url}" userId="${jdbc_user}" password="${jdbc_password}" />

		<!-- 类型转换  -->
		<javaTypeResolver>
			<!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.）  -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成实体类地址  -->
		<javaModelGenerator targetPackage="com.kjj.commserver"
			targetProject="src\main\java">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.kjj.commserver.entity， true:com.kjj.commserver.entity.[schemaName]  -->
			<property name="enableSubPackages" value="false" />
			<!-- 是否针对string类型的字段在set的时候进行trim调用  -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<sqlMapGenerator targetPackage="com.kjj.commserver"
			targetProject="src\main\java">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.kjj.commserver.sqlmaps， true:com.kjj.commserver.sqlmaps.[schemaName]  -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>
		
		<!-- 生成mapxml对应client，也就是接口dao  -->      
        <!-- <javaClientGenerator targetPackage="com.kjj.commserver.dao"  
            targetProject="src\main\java" type="XMLMAPPER" >  -->  
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.kjj.commserver.dao， true:com.kjj.commserver.dao.[schemaName]  -->  
        	<!-- <property name="enableSubPackages" value="false" />  -->  
        <!--</javaClientGenerator>  -->  

		<!-- 配置表信息  -->
		<!-- <table tableName="XXX" enableCountByExample="false" enableDeleteByExample="false" enableUpdateByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">  -->   
        <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample是否生成 example类    -->  
        <!-- 忽略列，不生成bean 字段  -->  
        <!-- <ignoreColumn column="XXX" />  -->  
        <!-- 指定列的java数据类型  -->  
        <!-- <columnOverride column="XXX" jdbcType="VARCHAR" />  --> 
        <!-- </table>  -->
        <table tableName="tb_ifcert_userInfo" modelType="flat" enableCountByExample="false" enableDeleteByExample="false" enableUpdateByExample="false" enableSelectByExample="false"/>
	</context>
</generatorConfiguration>